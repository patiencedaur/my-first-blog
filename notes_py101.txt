ххх.метод() - функция, которая принадлежит объекту (объект - это ххх)
функция(ххх) - просто функция

строка - это то, что в кавычках. строка - это не число!

** - возвести в степень

str(число) - превратить число в строку
int(ххх) - превратить объект ххх в целое число


создание переменной
name = "Patience" (питон сам соображает, какого типа переменная)

print(xxx)


список
(удобно, когда надо сортировать)
[] - пустой
sailor = ["moon", "mercury", "jupiter", "mars", "venus"] номер первого объекта - 0
len(sailor) - количество объектов в списке
sailor.sort() - сортировка по возрастанию или по алфавиту
sailor.reverse() - поменять порядок объектов на обратный
sailor.append(xxx) - добавить новый элемент к концу списка
print(sailor[4])
sailor.pop(5) - удалить элемент списка под номером 5

можно считать элементы и с конца: первый с конца - под номером -1, второй -2 и так далее


словарь
(это словарь пар соответствий. удобно, когда надо искать значение по ключу)
{} - пустой
participant = {'name': 'Ola', 'country': 'Poland', 'favorite_numbers': [7, 42, 92]}
да, в словарь можно запихнуть список, но только в качестве значения, а не ключа (это как в функции для одного у может быть несколько х, но не наоборот)
до двоеточия - ключ, после двоеточия - соответствующее ключу значение.
print(participant["name"]) - вывести значение ключа "name"
ошибка KeyError - нет такого ключа
добавить в словарь новую пару: participant["date"] = 2018
тоже работает len()
тоже работает xxx.pop() participant.pop('country')


and, or
Булевы значения: True, False


if 3>2:
	print("It works!")
таб или 4 пробела
if, elif, else



Определение функции
def func():
	дальше функция
или с параметром
def func(a):
	дальше функция


Цикл
for i in a:
	перебрать все
for i in range(1, 5)
	перебрать итераторы от 1 до 4


Парсинг строки
.split("разделитель", maxsplit=сколько раз разбить):
"Changes_Come_Girl".split("_", maxsplit=1) - "Changes", "Come_Girl"

разделить по набору _букв_, делить один раз


копировать файл вместе с метаданными: shutil.copy2('что откуда', 'что куда')
показать все файлы в папке: os.listdir(путь к папке)
сделать путь из кусок: os.path.join('Y:', 'Programming', 'djangogirls')


arguments (args) и keyword arguments (kwargs):
обычные аргументы передаются, например, просто числом: sqrt(5)
ключевые аргументы задаются как переменные в том месте, где они передаются: sqrt(a=5) - при условии, что в коде функции написано в качестве переменной именно a
если функция с несколькими аргументами, можно одновременно передавать и такие, и такие.

kwargs можно переставлять, от этого ничего не случится
